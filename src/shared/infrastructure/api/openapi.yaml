openapi: 3.0.0
info:
  title: Game Collector API - Clean Architecture NodeJS
  description: Game Collector API - Clean Architecture NodeJS
  version: 0.3.0

servers:
  - url: /api

paths:

  # ##################################################################
  # Healthcheck
  # ##################################################################

  /healthcheck:
    get:
      summary: Healthcheck of the application
      tags:
        - Healthcheck
      operationId: healthcheck
      responses: 
        "200": 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                message: 'OK'

  # ##################################################################
  # Config
  # ##################################################################
  
  /config:
    get:
      summary: Get the application configuration. Don't expose this method in production environment!!!
      tags:
        - Configuration
      operationId: getConfig
      responses: 
        "200": 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
              example:
                app:
                  appName: Clean Architecture - NodeJS - Organization by themes
                  description: Demo of Clean Architecture in NodeJS using a organization of componentes by themes
                  environment: dev
        
  # ##################################################################
  # Gamesystems
  # ##################################################################

  /gamesystems:
    post: 
      summary: Create a new gamesystem
      tags:
        - Gamesystems
      operationId: createGamesystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GamesystemCreationData"
            example:
              id: xxxxxxxxxxxxxxxxx
              name: a new awesome gamesystem
              description: a new awesome gamesystem

      responses: 
        "201": 
          description: Gamesystem created OK and returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"
              example:
                id: xxxxxxxxxxxxxxxxx
                name: a new awesome gamesystem
                description: a new awesome gamesystem
        "409": 
          description: Conflict
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"
              example:
                code: 409
                message: There is a previous gamesystem with the same name in the system
    get:
      summary: Get all gamesystems
      tags:
        - Gamesystems
      operationId: getAllGamesystems
      responses: 
        "200": 
          description: Data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemDataList"
              example:
                - id: xxxxxxxxxxxxxxxxx
                  name: a new awesome gamesystem
                  description: a new awesome gamesystem
                - id: yyyyyyyyyyyyyyyyy
                  name: another stuff of gamesystem
                  description: another stuff of gamesystem

  /gamesystems/{gamesystemId}:
    get:
      summary: Get the gamesystem by id
      tags:
        - Gamesystems
      operationId: getGamesystemById
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string

      responses: 
        "200": 
          description: Data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"
              example:
                id: xxxxxxxxxxxxxxxxx
                name: a new awesome gamesystem
                description: a new awesome gamesystem
        "404": 
          $ref: '#/components/responses/ObjectNotFoundResponse'

    put:
      summary: Update the gamesystem by Id
      tags:
        - Gamesystems
      operationId: updateGamesystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GamesystemUpdateData"
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string
      responses: 
        "200": 
          description: Gamesystem updated OK and data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"
              example:
                id: xxxxxxxxxxxxxxxxx
                name: an updated awesome gamesystem
                description: an updated awesome gamesystem
        "404": 
          $ref: '#/components/responses/ObjectNotFoundResponse'

    delete:
      summary: Delete the gamesystem by Id
      tags:
        - Gamesystems
      operationId: deleteGamesystem
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string
      responses: 
        "204": 
          description: Gamesystem deleted OK, no data returned
        "404": 
          $ref: '#/components/responses/ObjectNotFoundResponse'

components:

  # ##################################################################
  # RESPONSES
  # ##################################################################

  responses:

    ObjectNotFoundResponse:
      description: Object not found
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Object not found in the system

  # ##################################################################
  # SCHEMAS
  # ##################################################################

  schemas:

    Object:
      type: object

    Success:
      type: object
      properties:
        message:
          type: string
      required: ['message']
      additionalProperties: false

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
      required: ['code', 'message']
      additionalProperties: false

    # Id Data

    IdData:
      type: object
      properties:
        id:
          type: string
      required:  ['id']
      additionalProperties: false

    # Gamesystems

    GamesystemBasicData:
      type: object 
      properties: 
        name:
          type: string
        description:
          type: string
      required: ['name', 'description']
      additionalProperties: false

    GamesystemData:
      allOf:
        - $ref: '#/components/schemas/IdData'
        - $ref: '#/components/schemas/GamesystemBasicData'
    
    GamesystemCreationData:
      allOf:
        - $ref: '#/components/schemas/GamesystemBasicData'

    GamesystemUpdateData:
      allOf:
        - $ref: '#/components/schemas/GamesystemBasicData'

    GamesystemDataList:
      type: array
      items:
        $ref: "#/components/schemas/GamesystemData"
