openapi: 3.0.0
info:
  title: Game Collector API - Clean Architecture NodeJS
  description: Game Collector API - Clean Architecture NodeJS
  version: 0.3.0

servers:
  - url: /api

paths:

  # ##################################################################
  # Healthcheck
  # ##################################################################

  /healthcheck:
    get:
      summary: Healthcheck of the application
      tags:
        - "Healthcheck"
      operationId: healthcheck
      responses: 
        "200": 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                message: 'OK'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnerErrorResponse'
              example:
                code: 500
                message: Internal Error

  # ##################################################################
  # Config
  # ##################################################################
  
  /config:
    get:
      summary: Get the application configuration. Don't expose this method in production environment!!!
      tags:
        - "Configuration"
      operationId: getConfig
      responses: 
        "200": 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
              example:
                message: 'OK'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnerErrorResponse'
              example:
                code: 500
                message: Internal Error

  
  # ##################################################################
  # Gamesystems
  # ##################################################################

  /gamesystems:
    post: 
      summary: Create a new gamesystem
      tags:
        - Gamesystems
      operationId: createGamesystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GamesystemCreationData"
      responses: 
        "201": 
          description: Gamesystem created OK and returned 
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"

    get:
      summary: Get all gamesystems
      tags:
        - Gamesystems
      operationId: getAllGamesystems
      responses: 
        "200": 
          description: Gamesystem created OK and gamesystem data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemDataList"

  /gamesystems/{gamesystemId}:
    get:
      summary: Get the gamesystem by id
      tags:
        - Gamesystems
      operationId: getGamesystemById
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string

      responses: 
        "200": 
          description: Data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"

    put:
      summary: Update the gamesystem by Id
      tags:
        - Gamesystems
      operationId: updateGamesystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GamesystemUpdateData"
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string
      responses: 
        "200": 
          description: Gamesystem updated OK and data returned
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/GamesystemData"

    delete:
      summary: Delete the gamesystem by Id
      tags:
        - Gamesystems
      operationId: deleteGamesystem
      parameters:
        - name: gamesystemId
          in: path
          description: gamesystem Id
          required: true
          schema:
            type: string
      responses: 
        "204": 
          description: Gamesystem deleted OK, no data returned

components:
  schemas:

    # ##################################################################
    # RESPONSES
    # ##################################################################

    SuccessResponse:
      type: object
      properties:
        message:
          type: string

    ObjectResponse:
      type: object

    InnerErrorResponse:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    # Gamesystems

    GamesystemIdData:
      type: object
      properties:
        id:
          type: string

    BasicGamesystemData:
      type: object 
      properties: 
        name:
          type: string
        description:
          type: string

    GamesystemData:
      allOf:
        - $ref: '#/components/schemas/BasicGamesystemData'
        - type: object
      properties: 
        id: 
          type: string
    
    GamesystemCreationData:
      allOf:
        - $ref: '#/components/schemas/BasicGamesystemData'
        - type: object

    GamesystemUpdateData:
      allOf:
        - $ref: '#/components/schemas/BasicGamesystemData'
        - type: object

    GamesystemDataList:
      type: array
      items:
        $ref: "#/components/schemas/GamesystemData"

